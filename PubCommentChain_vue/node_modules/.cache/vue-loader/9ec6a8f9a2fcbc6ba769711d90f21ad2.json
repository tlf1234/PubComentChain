{"remainingRequest":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pubComentsChain\\PubCommentChain_vue\\src\\components\\HeaderSearch.vue?vue&type=style&index=0&lang=css","dependencies":[{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\src\\components\\HeaderSearch.vue","mtime":1645360685954},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1521907989000},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\postcss-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645264055207},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n#header_search .input_block {\n  position: relative;\n}\n#header_search .input_block .cover {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n@import url(\"../assets/css/headerSearch.css\");\n",{"version":3,"sources":["HeaderSearch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"HeaderSearch.vue","sourceRoot":"src\\components","sourcesContent":["<template>\n  <div id=\"header_search\">\n    <!--1 放大镜 -->\n    <!-- <div class=\"magnifier\" @click=\"changeActive\">\n      <img src=\"../../public/img/header_search.svg\" alt=\"\" />\n    </div> -->\n    <!--2 弹出的搜索页面 ,注意下面这个是界面，屏蔽掉以后可以显示部件了-->\n    <!-- <div class=\"search_input\" :class=\"{ 'd-none': isActive }\"> -->\n    <!-- 搜索头部 -->\n    <div class=\"input_top\">\n      <form action=\"/\">\n        <van-search\n          v-model=\"inputValue\"\n          placeholder=\"搜索活动\"\n          show-action\n          @search=\"onSearch\"\n          @cancel=\"changeActive\"\n        />\n      </form>\n    </div>\n    <!-- 功能分析，要保存好电影的mid,和影院的cid -->\n    <!-- 3 搜索到的东西的内容展示 -->\n    <!-- 给这个元素设置高度，使其产生scroll效果 -->\n    <div class=\"input_content\">\n      <!-- <div class=\"input_main\"> -->\n      <div v-for=\"(item, i) of searchList\" :key=\"i\" class=\"input_block\">\n        <div class=\"cover\" :data-cid=\"item.cid\" @click=\"goCinema\"></div>\n        <div class=\"cname\">\n          <!-- {{item.cid}} -->\n          <span\n            v-for=\"(elem, i) of item.cname\"\n            :key=\"i\"\n            :class=\"{ red: elem == inputValue }\"\n            >{{ elem }}</span\n          >\n        </div>\n        <div class=\"caddress\">\n          <span\n            v-for=\"(elem, i) of item.caddress\"\n            :key=\"i\"\n            :class=\"{ red: elem == inputValue }\"\n            >{{ elem }}</span\n          >\n        </div>\n        <div class=\"tag\">\n          <div\n            class=\"tag_icon\"\n            v-for=\"(elem, i) of strSplit(item.tag)\"\n            :key=\"i\"\n          >\n            {{ elem }}\n          </div>\n        </div>\n        <div class=\"lowest\">{{ item.lowest }}元起</div>\n      </div>\n      <!-- </div> -->\n    </div>\n    <!-- </div> -->\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      isActive: true,\n      inputValue: \"\",\n      searchList: [],\n    };\n  },\n  watch: {\n    //监听input框的输入内容\n    inputValue() {\n      // console.log(this.inputValue);\n      this.cinemaSearch();\n    },\n  },\n  // mounted() {\n  //   changeActive();\n  // },\n  methods: {\n    //---------跳转到影院界面,同时把cid,cname,保存到vuex---------\n    goCinema(e) {\n      var cid = e.target.dataset.cid;\n      // var cid=e.target.dataset.cid;\n      // var cname=e.target.dataset.cname;\n      console.log(cid);\n      // console.log(cname);\n      //--vuex--\n      // this.$store.commit(\"changeMname\",this.elem.mname)\n      this.$store.commit(\"changeCid\", cid);\n      // this.$store.commit(\"changeCname\",cname)\n      this.$router.push(\"/cinema\");\n    },\n    //split函数，用于切割字符串形成数组\n    strSplit(str) {\n      var arr = str.split(\"，\");\n      // console.log(arr)\n      return arr;\n    },\n    //搜索功能\n    cinemaSearch() {\n      // http://127.0.0.1:5050/cinema/v1/search_cinema?sel=0\n      var url = \"cinema/v1/search_cinema\";\n      var obj = { sel: this.inputValue };\n      this.axios.get(url, { params: obj }).then((res) => {\n        if (res.data.code == 0) {\n          console.log(\"没有查询到数据\");\n          this.searchList = [];\n        } else {\n          var list = res.data.data;\n\n          //下面到底部是，搜索框对应文字变色功能\n          var str = this.inputValue;\n          //不等于0 才切割\n          if (str !== \"\") {\n            //1对名字的验证\n            for (var i = 0; i < list.length; i++) {\n              //拼接数据\n              if (list[i].cname.indexOf(str) >= 0) {\n                // console.log(str);\n                var arr = list[i].cname.split(str);\n                arr.splice(1, 0, str);\n                list[i].cname = arr;\n              } else {\n                list[i].cname = [list[i].cname];\n              }\n            }\n            //2 对地址的验证\n            for (var i = 0; i < list.length; i++) {\n              //拼接数据\n              if (list[i].caddress.indexOf(str) >= 0) {\n                var arr = list[i].caddress.split(str);\n                arr.splice(1, 0, str);\n                list[i].caddress = arr;\n              } else {\n                list[i].caddress = [list[i].caddress];\n              }\n            }\n          } else {\n            for (var i = 0; i < list.length; i++) {\n              list[i].cname = [list[i].cname];\n              list[i].caddress = [list[i].caddress];\n            }\n          }\n          // console.log(list);\n          this.searchList = list;\n          console.log(this.searchList);\n        }\n      });\n    },\n    // 用户点击时触发\n    onSearch() {\n      console.log(1);\n    },\n    //切换input页面的显示隐藏\n    changeActive() {\n      this.isActive = !this.isActive;\n    },\n  },\n};\n</script>\n<style>\n#header_search .input_block {\n  position: relative;\n}\n#header_search .input_block .cover {\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n}\n@import url(\"../assets/css/headerSearch.css\");\n</style>"]}]}