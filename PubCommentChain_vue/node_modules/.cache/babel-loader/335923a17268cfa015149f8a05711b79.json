{"remainingRequest":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\thread-loader\\dist\\cjs.js!D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\pubComentsChain\\PubCommentChain_vue\\src\\views\\cinema\\FindCinemaItem.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\src\\views\\cinema\\FindCinemaItem.vue","mtime":1569206673000},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645264055207},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1645264062943},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.split\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//从movieLi 跳转过来时，要把 city_id (vuex获取),mid(movieLi)获取过来\nexport default {\n  data: function data() {\n    return {\n      ulWidth: 800\n    };\n  },\n  methods: {\n    //跳转到seat.vue\n    goSeat: function goSeat(e) {\n      var _this = this;\n\n      var cmid = e.currentTarget.dataset.cmid;\n      var uid = this.$store.getters.getUid; //1 如果登录了，跳转到seat.vue\n\n      console.log(uid);\n\n      if (uid != \"\") {\n        this.$store.commit(\"changeCmid\", cmid);\n        this.$router.push(\"/seat\");\n      } else {\n        //2 如果没登录,先登录，在跳转\n        this.$messagebox.confirm(\"是否立即登录\").then(function (action) {\n          _this.$router.push('/login');\n        }).catch(function (err) {\n          return;\n        });\n      }\n    },\n    //---------跳转到影院界面,同时把cid,cname,保存到vuex---------\n    goCinema: function goCinema() {\n      this.$router.push(\"/cinema\"); //--vuex--\n      // this.$store.commit(\"changeMname\",this.elem.mname)\n\n      this.$store.commit(\"changeCid\", this.cinema.cid);\n      this.$store.commit(\"changeCname\", this.cinema.cname);\n    },\n    getUlWidth: function getUlWidth() {\n      //-----直接在created:里写，使用getComputedStyle报错，但是有效果；\n      var li = document.getElementsByClassName(\"time_block\")[0];\n      var style = getComputedStyle(li); // console.log(li);\n\n      var num = this.time.length;\n      var oneWidth = parseFloat(style.width) + parseFloat(style[\"margin-right\"]);\n      this.ulWidth = num * oneWidth + 5; // console.log(style.width);\n      // console.log(style[\"margin-right\"]);\n    },\n    //split函数，用于切割字符串形成数组\n    strSplit: function strSplit(str) {\n      var arr = str.split(\"，\"); // console.log(arr)\n\n      return arr;\n    }\n  },\n  //把dom的操作函数的调用，写在这里面\n  //-----------------------------//\n  //最经常使用的模式是为你的组件获取数据（使用created创建的），并修改DOM，通常集成非Vue库\n  //-----------------------------//\n  mounted: function mounted() {\n    this.getUlWidth();\n  },\n  created: function created() {// this.getUlWidth();\n    // console.log(this.cinema);  //打印父组件传过来的数值\n    // console.log(this.time);    //\n  },\n  props: {\n    cinema: {\n      default: \"\"\n    },\n    time: {\n      default: \"\"\n    }\n  }\n};",{"version":3,"sources":["FindCinemaItem.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA;AACA,eAAA;AACA,MADA,kBACA;AACA,WAAA;AACA,eAAA;AADA,KAAA;AAGA,GALA;AAMA,WAAA;AACA;AACA,UAFA,kBAEA,CAFA,EAEA;AAAA;;AACA,UAAA,OAAA,EAAA,aAAA,CAAA,OAAA,CAAA,IAAA;AACA,UAAA,MAAA,KAAA,MAAA,CAAA,OAAA,CAAA,MAAA,CAFA,CAGA;;AACA,cAAA,GAAA,CAAA,GAAA;;AACA,UAAA,OAAA,EAAA,EAAA;AACA,aAAA,MAAA,CAAA,MAAA,CAAA,YAAA,EAAA,IAAA;AACA,aAAA,OAAA,CAAA,IAAA;AACA,OAHA,MAGA;AACA;AACA,aAAA,WAAA,CAAA,OAAA,CAAA,QAAA,EACA,IADA,CACA,kBAAA;AACA,gBAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA,SAHA,EAIA,KAJA,CAIA,eAAA;AAAA;AAAA,SAJA;AAKA;AACA,KAlBA;AAmBA;AACA,YApBA,sBAoBA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,SAAA,EADA,CAEA;AACA;;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,WAAA,EAAA,KAAA,MAAA,CAAA,GAAA;AACA,WAAA,MAAA,CAAA,MAAA,CAAA,aAAA,EAAA,KAAA,MAAA,CAAA,KAAA;AACA,KA1BA;AA2BA,cA3BA,wBA2BA;AACA;AACA,UAAA,KAAA,SAAA,sBAAA,CAAA,YAAA,EAAA,CAAA,CAAA;AACA,UAAA,QAAA,iBAAA,EAAA,CAAA,CAHA,CAIA;;AACA,UAAA,MAAA,KAAA,IAAA,CAAA,MAAA;AACA,UAAA,WAAA,WAAA,MAAA,KAAA,IAAA,WAAA,MAAA,cAAA,CAAA,CAAA;AACA,WAAA,OAAA,GAAA,MAAA,QAAA,GAAA,CAAA,CAPA,CAQA;AACA;AACA,KArCA;AAsCA;AACA,YAvCA,oBAuCA,GAvCA,EAuCA;AACA,UAAA,MAAA,IAAA,KAAA,CAAA,GAAA,CAAA,CADA,CAEA;;AACA,aAAA,GAAA;AACA;AA3CA,GANA;AAmDA;AACA;AACA;AACA;AACA,SAvDA,qBAuDA;AACA,SAAA,UAAA;AACA,GAzDA;AA0DA,SA1DA,qBA0DA,CACA;AACA;AACA;AACA,GA9DA;AA+DA,SAAA;AACA,YAAA;AAAA,eAAA;AAAA,KADA;AAEA,UAAA;AAAA,eAAA;AAAA;AAFA;AA/DA,CAAA","sourcesContent":["<template>\n  <div id=\"find_cinema_item\">\n    <!-- <div>{{cinema.cname}}</div>\n    <div>{{cinema.caddress}}</div>\n    <button v-for=\"(elem,i) of time\" :key=\"i\">\n      <span> {{elem.time_start}}</span>\n      <span> {{elem.price_e}}元 </span>\n    </button>\n    <br>\n    <hr> -->\n    <div class=\"cinema_item\">\n      <div class=\"cname\" @click=\"goCinema\">{{cinema.cname}}</div>\n      <div class=\"caddress\">{{cinema.caddress}}</div>\n      <div class=\"tag cf\">\n        <div class=\"tag_icon\" v-for=\"(elem,i) of strSplit(cinema.tag)\" :key=\"i\">{{elem}}</div>\n      </div>\n      <div class=\"prefe\">\n        <div class=\"hui\">惠</div>\n        <div class=\"content\">{{cinema.prefe}}</div>\n      </div>\n      <!-- 时间的排列 -->\n      <div class=\"time\">\n        <ul class=\"cf\" :style=\"{width:ulWidth+'px'}\">\n          <li class=\"time_block\" v-for=\"(elem,j) of time\" :key=\"j\" @click=\"goSeat\" :data-cmid=\"elem.cmid\">\n            <h3 class=\"h_1\">{{elem.time_start}}</h3>\n            <h3 class=\"h_2\">{{elem.d23}}</h3>\n            <h3 class=\"h_3\">{{elem.price_e}}</h3>\n          </li>\n        </ul>\n      </div>\n      <div class=\"lowest\">{{cinema.lowest}}元起</div>\n    </div>\n  </div>\n</template>\n<script>\n//从movieLi 跳转过来时，要把 city_id (vuex获取),mid(movieLi)获取过来\nexport default {\n  data(){\n    return{\n      ulWidth:800,\n    }\n  },\n  methods:{\n    //跳转到seat.vue\n    goSeat(e){\n      var cmid=e.currentTarget.dataset.cmid;\n      var uid=this.$store.getters.getUid;\n      //1 如果登录了，跳转到seat.vue\n      console.log(uid);\n      if(uid!=\"\"){\n        this.$store.commit(\"changeCmid\",cmid);\n        this.$router.push(`/seat`)\n      }else{\n        //2 如果没登录,先登录，在跳转\n        this.$messagebox.confirm(\"是否立即登录\")\n        .then(action=>{\n          this.$router.push('/login')\n        })\n        .catch(err=>{return;})\n      }\n    },\n    //---------跳转到影院界面,同时把cid,cname,保存到vuex---------\n    goCinema(){\n      this.$router.push(\"/cinema\");\n      //--vuex--\n      // this.$store.commit(\"changeMname\",this.elem.mname)\n      this.$store.commit(\"changeCid\",this.cinema.cid)\n      this.$store.commit(\"changeCname\",this.cinema.cname)\n    },\n    getUlWidth(){\n      //-----直接在created:里写，使用getComputedStyle报错，但是有效果；\n      var li=document.getElementsByClassName(\"time_block\")[0];\n      var style=getComputedStyle(li);\n      // console.log(li);\n      var num=this.time.length;\n      var oneWidth=parseFloat(style.width)+parseFloat(style[\"margin-right\"]);\n      this.ulWidth=num*oneWidth+5;\n      // console.log(style.width);\n      // console.log(style[\"margin-right\"]);\n    },\n    //split函数，用于切割字符串形成数组\n    strSplit(str){\n      var arr=str.split(\"，\");\n      // console.log(arr)\n      return arr;\n    }\n  },\n  //把dom的操作函数的调用，写在这里面\n  //-----------------------------//\n  //最经常使用的模式是为你的组件获取数据（使用created创建的），并修改DOM，通常集成非Vue库\n  //-----------------------------//\n  mounted(){\n   this.getUlWidth();\n  },\n  created(){\n    // this.getUlWidth();\n    // console.log(this.cinema);  //打印父组件传过来的数值\n    // console.log(this.time);    //\n  },  \n  props:{\n    cinema:{default:\"\"},\n    time:{default:\"\"}\n  },\n}\n</script>\n<style>\n  @import url('../../assets/css/findCinemaItem.css');\n</style>"],"sourceRoot":"src\\views\\cinema"}]}