{"remainingRequest":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\babel-loader\\lib\\index.js!D:\\pubComentsChain\\PubCommentChain_vue\\src\\main.js","dependencies":[{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\src\\main.js","mtime":1645434061679},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1645264055207},{"path":"D:\\pubComentsChain\\PubCommentChain_vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1529635966000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport Vue from 'vue';\nimport App from './App.vue';\nimport router from './router'; //Vant 支持一次性导入所有组件，引入所有组件会增加代码包体积，因此不推荐这种做法\n//Vant的导入0\n\nimport Vant from 'vant';\nimport 'vant/lib/index.css';\nVue.use(Vant); //全局定义 指令\n\nVue.directive('dir2', {\n  inserted: function inserted(el) {\n    console.log(\"在main.js中自定义了指令：打印所在元素element\", el); // el.style.width=\"200px\"\n  }\n}); //全局定义 过滤器\n\nVue.filter('capitalize', function (value) {\n  if (!value) return '';\n  value = value.toString();\n  return value.charAt(0).toUpperCase() + value.slice(1);\n}); //引入第三方的组件库 mint ui\n// 第1步 ：完整引入mint-ui组件库中的所有组件\n\nimport MintUI from 'mint-ui'; // 第2步 ： 单独引入mint-ui组件库中的样式\n\nimport 'mint-ui/lib/style.css'; // 第3步 ： 将mint-ui祖册到vue实例中\n\nVue.use(MintUI); // 第4步 ： 将字体图标引入到当前项目中,引入第三方的iconfont.css\n\nimport './font/font_1285854_comsztiakwk/iconfont.css';\nimport './font/font_ra16fscd53k/iconfont.css'; // 5：引入axios,第三方模块\n\nimport axios from \"axios\"; // 6：配置axios 基础路径\n\naxios.defaults.baseURL = \"http://127.0.0.1:5050/\"; // 7：配置axios 保存session信息\n\naxios.defaults.withCredentials = true; // 8：注册vue 实例中\n//由于axios不支持use 将实例添加vue原型\n\nVue.prototype.axios = axios; //main.js\n//9:引入Vuex第三方模块\n\nimport Vuex from \"vuex\"; //10:注册Vuex\n\nVue.use(Vuex); //11:创建Vuex存储实例对象\n\nvar store = new Vuex.Store({\n  //共享数据\n  state: {\n    seatObj: {},\n    url: \"http://127.0.0.1:5050/\",\n    //定义路径\n    uid: \"\",\n    //保存用户uid\n    cmid: \"\",\n    //保存电影时间\n    toMoivePath: \"\",\n    toLoginPath: \"\",\n    uname: \"\",\n    cid: \"\",\n    //给一个初始id 防止服务器端在没有cid时报错\n    cname: \"\",\n    mid: \"\",\n    mname: \"\",\n    city_id: 7,\n    city: \"杭州\",\n    active: \"evaHead\",\n    activeTwo: \"home\"\n  },\n  //添加修改数据函数\n  mutations: {\n    selectCity: function selectCity(state, cityInfor) {\n      //更换城市\n      state.city_id = cityInfor[0];\n      state.city = cityInfor[1];\n    },\n    changeActive: function changeActive(state, val) {\n      //tabbar点击更换active\n      state.active = val;\n    },\n    changeActiveTwo: function changeActiveTwo(state, val) {\n      //tabbar点击更换activeTwo\n      state.activeTwo = val;\n    },\n    changeMid: function changeMid(state, val) {\n      state.mid = val;\n    },\n    changeMname: function changeMname(state, val) {\n      state.mname = val;\n    },\n    changeCid: function changeCid(state, val) {\n      state.cid = val;\n    },\n    changeCname: function changeCname(state, val) {\n      state.cname = val;\n    },\n    changeToLoginPath: function changeToLoginPath(state, val) {\n      state.toLoginPath = val;\n    },\n    changeUid: function changeUid(state, val) {\n      state.uid = val;\n    },\n    changeCmid: function changeCmid(state, val) {\n      state.cmid = val;\n    },\n    changeSeatObj: function changeSeatObj(state, val) {\n      state.seatObj = val;\n    }\n  },\n  //添加获取数据函数\n  getters: {\n    getCity_id: function getCity_id(state) {\n      return state.city_id;\n    },\n    getCity: function getCity(state) {\n      return state.city;\n    },\n    getMid: function getMid(state) {\n      return state.mid;\n    },\n    getUid: function getUid(state) {\n      return state.uid;\n    },\n    getToLoginPath: function getToLoginPath(state) {\n      return state.toLoginPath;\n    },\n    getSeatObj: function getSeatObj(state) {\n      return state.seatObj;\n    } // this.$store.getters.getUid;  获取数据的语法；\n\n  },\n  //添加异步操作数据函数\n  // https://blog.csdn.net/zdj5495/article/details/84871050  \n  actions: {\n    //修改数据函数保存mutations clear\n    //异步执行操作\n    //context 上下文对象=>$store对象\n    modifyCount: function modifyCount(context) {\n      //异步等待500毫秒调用clear函数\n      setTimeout(function () {\n        context.commit(\"clear\");\n      }, 500);\n    } // 调用    -执行actions里面函数\n    // this.$store.dispath(' modifyCount ');\n\n  }\n}); //全局组件 header\n// import MyHeader from './components/Header'\n// Vue.component(\"my-header\",MyHeader);\n//全局组件 footer\n// import MyFooter from './components/Footer'\n// Vue.component(\"my-footer\",MyFooter);\n//全局组件 City\n\nimport City from \"./components/City\";\nVue.component(\"my-city\", City);\nimport HeaderNav from \"./components/HeaderNav\";\nVue.component(\"my-header-nav\", HeaderNav);\nimport LoadWait from \"./components/LoadWait\";\nVue.component(\"my-load-wait\", LoadWait);\nVue.config.productionTip = false; // 还需要加载图标字体文件\n\nimport './lib/mui/css/icons-extra.css'; //12:将实例对象添加Vue中\n\nnew Vue({\n  router: router,\n  render: function render(h) {\n    return h(App);\n  },\n  store: store //!!!!\n\n}).$mount('#app');",{"version":3,"sources":["src\\main.js"],"names":["Vue","App","router","Vant","use","directive","inserted","el","console","log","filter","value","toString","charAt","toUpperCase","slice","MintUI","axios","defaults","baseURL","withCredentials","prototype","Vuex","store","Store","state","seatObj","url","uid","cmid","toMoivePath","toLoginPath","uname","cid","cname","mid","mname","city_id","city","active","activeTwo","mutations","selectCity","cityInfor","changeActive","val","changeActiveTwo","changeMid","changeMname","changeCid","changeCname","changeToLoginPath","changeUid","changeCmid","changeSeatObj","getters","getCity_id","getCity","getMid","getUid","getToLoginPath","getSeatObj","actions","modifyCount","context","setTimeout","commit","City","component","HeaderNav","LoadWait","config","productionTip","render","h","$mount"],"mappings":"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","sourceRoot":"D:\\pubComentsChain\\PubCommentChain_vue","sourcesContent":["import Vue from 'vue'\nimport App from './App.vue'\nimport router from './router'\n\n//Vant 支持一次性导入所有组件，引入所有组件会增加代码包体积，因此不推荐这种做法\n//Vant的导入0\nimport Vant from 'vant'\nimport 'vant/lib/index.css'\nVue.use(Vant);\n\n//全局定义 指令\nVue.directive('dir2', {\n  inserted(el) {\n    console.log(\"在main.js中自定义了指令：打印所在元素element\", el);\n    // el.style.width=\"200px\"\n  }\n})\n\n//全局定义 过滤器\nVue.filter('capitalize', function (value) {\n  if (!value) return ''\n  value = value.toString()\n  return value.charAt(0).toUpperCase() + value.slice(1)\n})\n\n\n//引入第三方的组件库 mint ui\n// 第1步 ：完整引入mint-ui组件库中的所有组件\nimport MintUI from 'mint-ui'\n// 第2步 ： 单独引入mint-ui组件库中的样式\nimport 'mint-ui/lib/style.css'\n// 第3步 ： 将mint-ui祖册到vue实例中\nVue.use(MintUI)\n// 第4步 ： 将字体图标引入到当前项目中,引入第三方的iconfont.css\nimport './font/font_1285854_comsztiakwk/iconfont.css'\nimport './font/font_ra16fscd53k/iconfont.css'\n\n// 5：引入axios,第三方模块\nimport axios from \"axios\";\n// 6：配置axios 基础路径\naxios.defaults.baseURL = \"http://127.0.0.1:5050/\";\n// 7：配置axios 保存session信息\naxios.defaults.withCredentials = true;\n// 8：注册vue 实例中\n//由于axios不支持use 将实例添加vue原型\nVue.prototype.axios = axios;\n//main.js\n//9:引入Vuex第三方模块\nimport Vuex from \"vuex\";\n//10:注册Vuex\nVue.use(Vuex);\n//11:创建Vuex存储实例对象\nvar store = new Vuex.Store({\n  //共享数据\n  state: {\n    seatObj: {},\n    url: \"http://127.0.0.1:5050/\",  //定义路径\n    uid: \"\",   //保存用户uid\n    cmid: \"\", //保存电影时间\n    toMoivePath: \"\",\n    toLoginPath: \"\",\n    uname: \"\",\n    cid: \"\",  //给一个初始id 防止服务器端在没有cid时报错\n    cname: \"\",\n    mid: \"\",\n    mname: \"\",\n    city_id: 7,\n    city: \"杭州\",\n    active: \"evaHead\",\n    activeTwo: \"home\",\n\n  },\n  //添加修改数据函数\n  mutations: {\n    selectCity(state, cityInfor) { //更换城市\n      state.city_id = cityInfor[0];\n      state.city = cityInfor[1];\n    },\n    changeActive(state, val) {     //tabbar点击更换active\n      state.active = val;\n    },\n    changeActiveTwo(state, val) {     //tabbar点击更换activeTwo\n      state.activeTwo = val;\n    },\n    changeMid(state, val) {\n      state.mid = val;\n    },\n    changeMname(state, val) {\n      state.mname = val;\n    },\n    changeCid(state, val) {\n      state.cid = val;\n    },\n    changeCname(state, val) {\n      state.cname = val;\n    },\n    changeToLoginPath(state, val) {\n      state.toLoginPath = val;\n    },\n    changeUid(state, val) {\n      state.uid = val;\n    },\n    changeCmid(state, val) {\n      state.cmid = val;\n    },\n    changeSeatObj(state, val) {\n      state.seatObj = val;\n    },\n    // increment(state){ //购物车数量加1\n    //   state.cartCount++;\n    // },\n    // subItem(state){\n    //   state.cartCount--;\n    // },\n    // clear(state){     //购物车数量清零\n    //   state.cartCount=0;\n    // }\n  },\n  //添加获取数据函数\n  getters: {\n    getCity_id(state) {\n      return state.city_id;\n    },\n    getCity(state) {\n      return state.city;\n    },\n    getMid(state) {\n      return state.mid;\n    },\n    getUid(state) {\n      return state.uid;\n    },\n    getToLoginPath(state) {\n      return state.toLoginPath;\n    },\n    getSeatObj(state) {\n      return state.seatObj;\n    }\n    // this.$store.getters.getUid;  获取数据的语法；\n  },\n  //添加异步操作数据函数\n  // https://blog.csdn.net/zdj5495/article/details/84871050  \n  actions: {\n    //修改数据函数保存mutations clear\n    //异步执行操作\n    //context 上下文对象=>$store对象\n    modifyCount: (context) => {\n      //异步等待500毫秒调用clear函数\n      setTimeout(() => {\n        context.commit(\"clear\")\n      }, 500)\n    }\n    // 调用    -执行actions里面函数\n    // this.$store.dispath(' modifyCount ');\n  }\n});\n\n\n//全局组件 header\n// import MyHeader from './components/Header'\n// Vue.component(\"my-header\",MyHeader);\n//全局组件 footer\n// import MyFooter from './components/Footer'\n// Vue.component(\"my-footer\",MyFooter);\n\n//全局组件 City\nimport City from \"./components/City\"\nVue.component(\"my-city\", City);\n\nimport HeaderNav from \"./components/HeaderNav\"\nVue.component(\"my-header-nav\", HeaderNav)\n\nimport LoadWait from \"./components/LoadWait\"\nVue.component(\"my-load-wait\", LoadWait)\n\n\nVue.config.productionTip = false\n\n\n\n// 还需要加载图标字体文件\nimport './lib/mui/css/icons-extra.css'\n\n//12:将实例对象添加Vue中\nnew Vue({\n  router,\n  render: h => h(App),\n  store   //!!!!\n}).$mount('#app')\n"]}]}